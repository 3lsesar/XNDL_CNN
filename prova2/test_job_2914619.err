unload bsc/1.0 (PATH, MANPATH)
load openmpi/4.1.5-gcc (LD_LIBRARY_PATH)
load HDF5/1.14.1-2 (PATH, LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH, HDF5_DIR, HDF5_ROOT) 
load mkl/2024.0 (LD_LIBRARY_PATH)
load PYTHON/3.11.5 (PATH, MANPATH, LD_LIBRARY_PATH, LIBRARY_PATH,
PKG_CONFIG_PATH, C_INCLUDE_PATH, CPLUS_INCLUDE_PATH, PYTHONHOME, PYTHONPATH) 
load bsc/1.0 (PATH, MANPATH)
load OPENJDK/11.0.2 (PATH, LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH) 
load NCCL/2.19.4 (LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH) 
load GCC/11.4.0 (PATH, LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH, HDF5_DIR, HDF5_ROOT) 
load BIN_UTILS/2.37 (PATH, LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH, HDF5_DIR, HDF5_ROOT) 
load CUDA/12.1 (PATH, MANPATH, LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH, CUDA_HOME, CUDA_VERSION, CUDA_INC, CUDA_INSTALL_PATH) 
load CUDNN/8.8/cuda12 (LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH, CUDNN_LIB_DIR, CUDNN_LIBRARY, CUDNN_INCLUDE_DIR) 
load TENSORRT/8.6/cuda12 (PATH, LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH) 
2024-06-09 13:47:18.212415: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-06-09 13:47:18.261255: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX512_FP16, in other operations, rebuild TensorFlow with the appropriate compiler flags.
/apps/ACC/PYTHON/3.11.5/GCC/lib/python3.11/site-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(activity_regularizer=activity_regularizer, **kwargs)
2024-06-09 13:47:22.569795: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1928] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 62623 MB memory:  -> device: 0, name: NVIDIA H100, pci bus id: 0000:1b:00.0, compute capability: 9.0
2024-06-09 13:47:22.570836: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1928] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 62623 MB memory:  -> device: 1, name: NVIDIA H100, pci bus id: 0000:2c:00.0, compute capability: 9.0
2024-06-09 13:47:22.571623: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1928] Created device /job:localhost/replica:0/task:0/device:GPU:2 with 62623 MB memory:  -> device: 2, name: NVIDIA H100, pci bus id: 0000:9d:00.0, compute capability: 9.0
2024-06-09 13:47:22.572166: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1928] Created device /job:localhost/replica:0/task:0/device:GPU:3 with 62623 MB memory:  -> device: 3, name: NVIDIA H100, pci bus id: 0000:ad:00.0, compute capability: 9.0
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1717933647.216535 2139145 service.cc:145] XLA service 0x7f1168009530 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
I0000 00:00:1717933647.216674 2139145 service.cc:153]   StreamExecutor device (0): NVIDIA H100, Compute Capability 9.0
I0000 00:00:1717933647.216681 2139145 service.cc:153]   StreamExecutor device (1): NVIDIA H100, Compute Capability 9.0
I0000 00:00:1717933647.216685 2139145 service.cc:153]   StreamExecutor device (2): NVIDIA H100, Compute Capability 9.0
I0000 00:00:1717933647.216691 2139145 service.cc:153]   StreamExecutor device (3): NVIDIA H100, Compute Capability 9.0
2024-06-09 13:47:27.379312: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:268] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2024-06-09 13:47:27.795451: I external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:465] Loaded cuDNN version 8800
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1717933649.528880 2139537 asm_compiler.cc:369] ptxas warning : Registers are spilled to local memory in function 'triton_gemm_dot_3155', 408 bytes spill stores, 376 bytes spill loads

I0000 00:00:1717933672.520937 2139145 asm_compiler.cc:369] ptxas warning : Registers are spilled to local memory in function 'input_divide_multiply_reduce_subtract_fusion_1', 28 bytes spill stores, 28 bytes spill loads

I0000 00:00:1717933672.531908 2139145 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
I0000 00:00:1717933696.476308 2139949 asm_compiler.cc:369] ptxas warning : Registers are spilled to local memory in function 'triton_gemm_dot_4729', 8 bytes spill stores, 8 bytes spill loads

I0000 00:00:1717933696.696636 2139928 asm_compiler.cc:369] ptxas warning : Registers are spilled to local memory in function 'triton_gemm_dot_3155', 8 bytes spill stores, 8 bytes spill loads

I0000 00:00:1717933696.792522 2140047 asm_compiler.cc:369] ptxas warning : Registers are spilled to local memory in function 'triton_gemm_dot_3869', 4 bytes spill stores, 4 bytes spill loads

I0000 00:00:1717933709.308295 2140642 asm_compiler.cc:369] ptxas warning : Registers are spilled to local memory in function 'triton_gemm_dot_346', 28 bytes spill stores, 28 bytes spill loads

2024-06-09 14:01:13.262080: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
